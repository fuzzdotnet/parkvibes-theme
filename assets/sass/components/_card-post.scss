// ------------------------------------
// Components > Card Post
// ------------------------------------

@use '../mixins/mq';
@use '../mixins/typography';
@use '../mixins/interaction';

.c-card-post {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: var(--space-200);
  padding: var(--card-padding);
  border-radius: var(--border-radius-default);
  background-color: var(--color-site-background);
  transition: transform var(--motion-duration-fast) var(--motion-ease),
              opacity var(--motion-duration-fast) var(--motion-ease),
              border-color var(--motion-duration-fast) var(--motion-ease);
  
  &[style*="--color-tag-accent"]:not(.c-card-post--in-tag-section) {
    background: var(--color-tag-accent);

    .c-btn--outline {
      --btn-border: var(--color-tag-accent);
    }
  }
  
  &:not([style*="--color-tag-accent"]) {
    border: var(--border-width-default) var(--border-style-default);
  }

  // Disable gradient hover effects
  &.c-card-post--in-tag-section::before {
    display: none;
  }

  &.js-contrast {
    .c-card-post__title,
    .c-card-post__link,
    .c-card-post__excerpt p,
    .c-card-post__timestamp {
      color: var(--color-on-accent, var(--color-site-text));
    }
  }
  
  &--has-no-image {
    justify-content: center;
    
    &.c-card-post--featured {
      padding-top: calc(var(--card-padding) + var(--space-1600));
    }
  }

  &--featured {
    counter-increment: featured-post-counter;

    &::after {
      content: counter(featured-post-counter);
      position: absolute;
      top: var(--space-200);
      left: var(--space-200);
      z-index: 2;
      pointer-events: none;
      @include typography.font($font-size: '600', $font-weight: bold, $line-height: '400');
      color: transparent;
      -webkit-text-stroke: var(--space-025) var(--color-site-text);
      background: var(--color-site-background);
      padding: var(--space-050) var(--space-200);
      border-top-left-radius: calc(var(--border-radius-default) * .65);
      border-bottom-right-radius: calc(var(--border-radius-default) * .65);
    }
    
    &[style*="--color-tag-accent"] {
      &::after {
        background: var(--color-site-background);
      }
    }
    
    &:not([style*="--color-tag-accent"]) {
      &::after {
        background: color-mix(in srgb, var(--color-site-text) 3%, var(--color-site-background));
      }
    }
  }

  // Wide variant - CSS Grid layout (horizontal card)
  &--wide {
    --space: var(--space-400);

    @include mq.mq($from: desktop) {
      padding: 0;
      display: grid;
      align-items: stretch;
      gap: var(--space);
      grid-template-columns: repeat(24, 1fr);
      
      .c-card-post__media {
        grid-column: 1 / 17; // Spans 16 columns (1-16)
        overflow: hidden;
        width: calc(100% - var(--space));
        height: calc(100% - calc(var(--space) * 2));
        margin: var(--space) 0 var(--space) var(--space); // Create spacing with margin
      }
      
      .c-card-post__text {
        grid-column: 17 / 25; // Spans 8 columns (17-24)
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: var(--space) var(--space) var(--space) 0;
      }

      .c-card-post__title {
        @include typography.responsive-font-size-250();
      }

      .c-card-post__timestamp {
        transform: none;
        writing-mode: unset;
      }
    }
  }

  &__media {
    position: relative;
    aspect-ratio: var(--ratio-3x2);
    border-radius: calc(var(--border-radius-default) * 0.75);
    background-color: color-mix(in srgb, var(--color-site-text) 5%, transparent);
  }

  &__image {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    border-radius: calc(var(--border-radius-default) * 0.75);
    object-fit: cover;
  }

  &__text {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: var(--space-200);
    width: 100%;
    height: 100%;
  }
  
  &__body {
    display: flex;
    flex-direction: column;
    flex: 1;
  }
  
  &__title {
    font-family: var(--gh-font-heading, var(--font-family-sans-serif));
    @include typography.font($font-weight: semi-bold, $uppercase: true);
    @include typography.responsive-font-size-150();
  }
  
  &__timestamp {
    flex-shrink: 0;
    align-self: flex-start;
    writing-mode: vertical-rl;
    text-orientation: mixed;
    font-family: var(--gh-font-body, var(--font-family-serif));
    @include typography.font($line-height: '1');
    transform: rotate(180deg);
  }

  &__link {
    display: block;
    
    &::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 1;
    }
  }
  
  &__excerpt p {
    margin: 0;
    color: color-mix(in srgb, var(--color-site-text) 85%, transparent);
    @include typography.font($font-size: '100', $line-height: '100', $text-wrap: balance);
  }
  
  &__tags {
    position: relative;
    z-index: 2;
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-100);
    margin-top: auto;
    
    // Only add padding when there are actual child elements
    &:has(> *) {
      padding-top: var(--space-200);
    }
  }

  &::before {
    content: '';
    position: absolute;
    z-index: -1;
    inset: 0;
    border-radius: inherit;
    background: linear-gradient(to bottom,
      color-mix(in srgb, var(--color-tag-accent) 20%, white) 0%,
      var(--color-tag-accent) 100%
    );
    opacity: 0;
    transition: opacity var(--motion-duration-fast) var(--motion-ease);
  }
  
  @include interaction.attention() {
    transform: translateY(calc(var(--space-050) * -1));
    
    &::before {
      opacity: 0.5;
    }
  }
}